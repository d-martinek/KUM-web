{"remainingRequest":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/babel-loader/lib/index.js!/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/danijel/Documents/Workspace/KUM-web/frontend/src/components/signUp/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/src/components/signUp/Register.vue","mtime":1554496919165},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1549443809249},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/babel-loader/lib/index.js","mtime":1549443804466},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1549443809249},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/vue-loader/lib/index.js","mtime":1549443812532}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  name: 'register',\n  data: function data() {\n    return {\n      register: {\n        email: null,\n        password: null,\n        confirmPassword: null,\n        firstName: null,\n        lastName: null,\n        errors: [],\n        status: null\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.$store.commit('getEmails');\n  },\n  methods: {\n    validateEmail: function validateEmail(email) {\n      return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n    },\n    registerValidate: function registerValidate() {\n      this.register.errors = [];\n\n      if (!this.register.email) {\n        this.register.errors.push(\"Email required.\");\n      } else if (!this.validateEmail(this.register.email)) {\n        this.register.errors.push(\"Email must be in format example@domain.com\");\n      } else if (this.$store.state.userEmails.includes(this.register.email)) {\n        this.register.errors.push(\"Email is not allowed. Please choose another one.\");\n      }\n\n      if (!this.register.password) this.register.errors.push(\"Password required.\");\n\n      if (!this.register.confirmPassword) {\n        this.register.errors.push(\"Confirm Password required.\");\n      } else if (this.register.password != this.register.confirmPassword) {\n        this.register.errors.push(\"Passwords must match\");\n      }\n\n      if (!this.register.firstName) this.register.errors.push(\"First name required.\");\n      if (!this.register.lastName) this.register.errors.push(\"Last name required.\");\n\n      if (!(this.register.errors && this.register.errors.length)) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    registerHandler: function registerHandler() {\n      var _this = this;\n\n      var valid = this.registerValidate();\n      var registerUserData = {\n        email: this.register.email,\n        password: this.register.password,\n        firstName: this.register.firstName,\n        lastName: this.register.lastName\n      };\n\n      if (valid) {\n        axios.post(\"/api/register\", registerUserData).then(function (res) {\n          if (res.data.success == true) {\n            _this.$store.dispatch('authUser');\n\n            _this.$router.push({\n              name: \"Dashboard\"\n            });\n          } else {\n            _this.register.status = res.data.message;\n          }\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"login-register\">\n    <div class=\"registerErrors\">\n      <div v-for=\"(err, i) in register.errors\" :key=\"i\">\n        {{ err }}\n      </div>\n      {{register.status}}\n    </div>\n    <hr>\n    <div class=\"register\">\n      <span>Register: </span>\n      <input v-model=\"register.email\" type=\"text\" placeholder=\"Email\">\n      <input v-model=\"register.password\" type=\"password\" placeholder=\"Password\">\n      <input v-model=\"register.confirmPassword\" type=\"password\" placeholder=\"Confirm password\">\n      <input v-model=\"register.firstName\" type=\"text\" placeholder=\"First name\">\n      <input v-model=\"register.lastName\" type=\"text\" placeholder=\"Last name\">\n      <button v-on:click=\"registerHandler\">Submit</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n  name: 'register',\n  data() {\n    return {\n      register: {\n        email: null,\n        password: null,\n        confirmPassword: null,\n        firstName: null,\n        lastName: null,\n        errors: [],\n        status: null\n      }\n    };\n  },\n  mounted() {\n    this.$store.commit('getEmails');\n  },\n  methods: {\n\n    validateEmail(email) {\n      return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    },\n\n    registerValidate() {\n      \n      this.register.errors = []\n\n      if(!this.register.email) {\n        this.register.errors.push(\"Email required.\")\n      } else if(!this.validateEmail(this.register.email)) {\n        this.register.errors.push(\"Email must be in format example@domain.com\")\n      }  else if(this.$store.state.userEmails.includes(this.register.email)) {\n        this.register.errors.push(\"Email is not allowed. Please choose another one.\")\n      }\n\n      if(!this.register.password) this.register.errors.push(\"Password required.\")\n      if(!this.register.confirmPassword) {\n        this.register.errors.push(\"Confirm Password required.\")\n      } else if(this.register.password != this.register.confirmPassword) {\n        this.register.errors.push(\"Passwords must match\")\n      }\n      if(!this.register.firstName) this.register.errors.push(\"First name required.\")\n      if(!this.register.lastName) this.register.errors.push(\"Last name required.\")\n\n      if(!(this.register.errors && this.register.errors.length)){\n        return true\n      } else{\n        return false\n      }\n      \n    },\n\n    registerHandler() {\n\n      let valid = this.registerValidate();\n\n      const registerUserData = {\n        email: this.register.email,\n        password: this.register.password,\n        firstName: this.register.firstName,\n        lastName: this.register.lastName\n      }\n\n      if(valid) {\n        axios.post(\"/api/register\", registerUserData)\n        .then(res => {\n          if (res.data.success == true) {\n            this.$store.dispatch('authUser')\n\n            this.$router.push({\n              name: \"Dashboard\"\n            })\n          } else {\n            this.register.status = res.data.message\n          }\n        })\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components/signUp"}]}