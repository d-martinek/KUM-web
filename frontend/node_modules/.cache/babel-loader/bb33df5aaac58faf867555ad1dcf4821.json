{"remainingRequest":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/babel-loader/lib/index.js!/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/danijel/Documents/Workspace/KUM-web/frontend/src/components/dashboard/Tasks.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/src/components/dashboard/Tasks.vue","mtime":1558308103831},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1557082350867},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/babel-loader/lib/index.js","mtime":1557082335768},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1557082350867},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/vue-loader/lib/index.js","mtime":1557082351628}],"contextDependencies":[],"result":["import _getIterator from \"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      editPermission: false,\n      tasks: [],\n      users: []\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.checkPermission();\n    this.$store.watch(function () {\n      return _this.$store.getters['checkAuth'];\n    }, function () {\n      _this.checkPermission();\n    });\n    this.eventId = this.$route.params.id;\n    axios.get('/api/tasks').then(function (res) {\n      if (res.data.success == true) {\n        if (_this.$store.state.userAuthenticated) {\n          res.data.tasks.forEach(function (task) {\n            _this.$store.dispatch('permissionAllowed', task.permissions).then(function (perm) {\n              if (perm) {\n                _this.tasks.push(task);\n              }\n            });\n          });\n        }\n      }\n    });\n    axios.get('/api/users').then(function (res) {\n      if (res.data.success == true) {\n        _this.users = res.data.users;\n      }\n    });\n  },\n  methods: {\n    returnAvatarByUserId: function returnAvatarByUserId(userId) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(this.users), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var user = _step.value;\n\n          if (user._id == userId) {\n            var tempAvatar = \"\";\n\n            if (user.avatar.length == 12) {\n              //default2.png - has 12 characters\n              tempAvatar = require(\"@/assets/img/avatars/\" + user.avatar);\n            } else {\n              tempAvatar = user.avatar;\n            }\n\n            return {\n              avatar: tempAvatar,\n              firstName: user.firstName,\n              lastName: user.lastName\n            };\n          } else {\n            var index = this.tasks[i].assigned.users.indexOf(userId);\n\n            if (index > -1) {\n              this.tasks[i].assigned.users.splice(index, 1);\n            }\n\n            var temp = {\n              _id: this.tasks[i]._id,\n              assignedUsers: this.tasks[i].assigned.users\n            };\n            axios.post('/api/task/assign', temp);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n    checkPermission: function checkPermission() {\n      var _this2 = this;\n\n      if (this.$store.state.userAuthenticated) {\n        this.$store.dispatch('permissionAllowed', [0, 1, 2, 3]).then(function (perm) {\n          _this2.editPermission = perm;\n        });\n      }\n    },\n    addMe: function addMe(i) {\n      this.tasks[i].assigned.users.push(this.$store.state.user._id);\n      var temp = {\n        _id: this.tasks[i]._id,\n        assignedUsers: this.tasks[i].assigned.users\n      };\n      axios.post('/api/task/assign', temp);\n    },\n    removeMe: function removeMe(i) {\n      var index = this.tasks[i].assigned.users.indexOf(this.$store.state.user._id);\n\n      if (index > -1) {\n        this.tasks[i].assigned.users.splice(index, 1);\n      }\n\n      var temp = {\n        _id: this.tasks[i]._id,\n        assignedUsers: this.tasks[i].assigned.users\n      };\n      axios.post('/api/task/assign', temp);\n    }\n  }\n};",{"version":3,"sources":["Tasks.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<div id=\"tasks\">\n        <v-container grid-list-xl>\n            <v-layout row wrap v-if=\"users[0]\">\n                <v-flex xs12 sm6 lg4 v-for=\"(task, index) in tasks\" :key=\"index\">\n                    <div class=\"task\">\n                       <v-card color=\"424242\" class=\"white--text\">\n                            <v-card-title primary-title>\n                                <v-layout row wrap>\n                                    <v-flex xs10 sm9 md10 lg9 justify-end align-end>\n                                        <span style=\"opacity: 0.5;\">{{ task.createdAt | moment(\"from\", \"now\") }}</span>\n                                        <br>\n                                        <div class=\"headline\">{{ task.title }}</div></v-flex>\n                                    <v-flex xs2 sm3 md2 lg3 align-self-start>\n                                        <v-avatar size=\"2em\" style=\"float: right;\" class=\"tooltip\">\n                                            <img :src=\"returnAvatarByUserId(task.creatorId).avatar\">\n                                            <span class=\"tooltiptext\">{{ returnAvatarByUserId(task.creatorId).firstName }} {{ returnAvatarByUserId(task.creatorId).lastName }}</span>\n                                        </v-avatar>\n                                    </v-flex>\n                                    <v-flex sm12>{{ task.description }}</v-flex>\n                                </v-layout>\n                            </v-card-title>\n                            <v-divider light></v-divider>\n                            <v-card-actions>\n                                <v-layout row wrap>\n                                    <v-flex xs2>\n                                        <span v-if=\"!task.assigned.users.includes($store.state.user._id)\">\n                                            <v-btn :disabled=\"task.assigned.users.length >= task.assigned.limit\" @click=\"addMe(index)\" class=\"hidden-sm-and-down\" flat dark> Assign </v-btn>\n                                            <v-btn :disabled=\"task.assigned.users.length >= task.assigned.limit\" @click=\"addMe(index)\" class=\"hidden-md-and-up\" depressed icon dark small>\n                                                <v-icon>add</v-icon>\n                                            </v-btn>\n                                        </span>\n                                        <span v-else>\n                                            <v-btn @click=\"removeMe(index)\" class=\"hidden-sm-and-down\" color=\"orange\" flat dark> Unassign </v-btn>\n                                            <v-btn @click=\"removeMe(index)\" class=\"hidden-md-and-up\" depressed icon dark small>\n                                                <v-icon color=\"orange\">remove</v-icon>\n                                            </v-btn>\n                                        </span>\n                                    </v-flex>\n                                    <v-flex xs10>\n                                        <span class=\"task-chip-text\">{{ task.assigned.users.length }} / {{ task.assigned.limit }}</span>\n                                        <span class=\"task-chip-avatars\" v-for=\"(userId, i) in task.assigned.users\" :key=\"i\">\n                                            <v-avatar size=\"2em\" class=\"tooltip\" :style=\"{right: 15 * (task.assigned.users.length - i)  + 'px'}\">\n                                                <img :src=\"returnAvatarByUserId(userId).avatar\">\n                                                <span class=\"tooltiptext\">{{ returnAvatarByUserId(userId).firstName }} {{ returnAvatarByUserId(userId).lastName }}</span>\n                                            </v-avatar>\n                                        </span>\n                                    </v-flex>\n                                </v-layout>\n                            </v-card-actions>\n                        </v-card>\n                    </div>\n                </v-flex>\n            </v-layout>\n        </v-container>\n\t</div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n\tdata() {\n\t\treturn {\n            editPermission: false,\n\t\t\ttasks: [],\n            users: []\n\t\t}\n    },\n\tmounted() {\n        this.checkPermission()\n        this.$store.watch(() => this.$store.getters['checkAuth'], () => {\n            this.checkPermission()\n        })\n\n\n        this.eventId = this.$route.params.id\n\n\t\taxios.get('/api/tasks')\n\t\t.then(res => {\n\t\t\tif(res.data.success == true){\n\t\t\t\tif(this.$store.state.userAuthenticated){\n                    res.data.tasks.forEach(task => {\n                        this.$store.dispatch('permissionAllowed', task.permissions).then(\n                            perm => {\n                                if(perm){\n                                    this.tasks.push(task)\n                                }\n                            }\n                        )\n                    })\n                }\n\t\t\t}\n        })\n        \n        axios.get('/api/users')\n\t\t.then(res => {\n\t\t\tif(res.data.success == true){\n\t\t\t\tthis.users = res.data.users\n\t\t\t}\n\t\t})\n    },\n    methods: {\n        returnAvatarByUserId: function(userId) {\n            for (let user of this.users) {\n                if(user._id == userId){\n                    let tempAvatar = \"\"\n\n                    if (user.avatar.length == 12) { //default2.png - has 12 characters\n                        tempAvatar = require(\"@/assets/img/avatars/\" + user.avatar)\n                    } else {\n                        tempAvatar = user.avatar\n                    }\n\n                    return {\n                        avatar: tempAvatar,\n                        firstName: user.firstName,\n                        lastName: user.lastName\n                    }\n                } else {\n                    let index = this.tasks[i].assigned.users.indexOf(userId)\n                    if (index > -1) {\n                        this.tasks[i].assigned.users.splice(index, 1)\n                    }\n\n                    let temp = {\n                        _id: this.tasks[i]._id,\n                        assignedUsers: this.tasks[i].assigned.users\n                    }\n                    axios.post('/api/task/assign', temp)\n                }\n            }\n        },\n\n        checkPermission: function() {\n            if(this.$store.state.userAuthenticated){\n                this.$store.dispatch('permissionAllowed', [0, 1, 2, 3]).then(\n                    perm => {\n                        this.editPermission = perm\n                    }\n                )\n            }\n        },\n\n        addMe: function(i){\n            this.tasks[i].assigned.users.push(this.$store.state.user._id)\n\n            let temp = {\n                _id: this.tasks[i]._id,\n                assignedUsers: this.tasks[i].assigned.users\n            }\n            axios.post('/api/task/assign', temp)\n        },\n        removeMe: function(i){\n            let index = this.tasks[i].assigned.users.indexOf(this.$store.state.user._id)\n            if (index > -1) {\n                this.tasks[i].assigned.users.splice(index, 1)\n            }\n\n            let temp = {\n                _id: this.tasks[i]._id,\n                assignedUsers: this.tasks[i].assigned.users\n            }\n            axios.post('/api/task/assign', temp)\n        }\n    },\n};\n</script>\n\n<style>\n#tasks{\n    width: 100%;\n}\n\n.task{\n    padding: 1.5em;\n}\n.task-chip-text{\n    position: absolute;\n    padding: 0.25em 1em 0.25em 2em;\n    background-color: #303030;\n    right: 1em;\n    border-radius: 1em;\n}\n\n.task-chip-avatars{\n    right: 1em;\n    position: absolute;\n    padding-right: 3em;\n}\n\n.tooltip {\n  position: relative;\n  display: inline-block;\n  border-bottom: 1px dotted black;\n}\n\n.tooltip .tooltiptext {\n  visibility: hidden;\n  width: 120px;\n  background-color: #555;\n  color: #fff;\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 0;\n  position: absolute;\n  z-index: 1;\n  bottom: 125%;\n  left: 50%;\n  margin-left: -60px;\n  opacity: 0;\n  transition: opacity 0.3s;\n}\n\n.tooltip .tooltiptext::after {\n  content: \"\";\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  margin-left: -5px;\n  border-width: 5px;\n  border-style: solid;\n  border-color: #555 transparent transparent transparent;\n}\n\n.tooltip:hover .tooltiptext {\n  visibility: visible;\n  opacity: 1;\n}\n</style>\n"],"sourceRoot":"src/components/dashboard"}]}