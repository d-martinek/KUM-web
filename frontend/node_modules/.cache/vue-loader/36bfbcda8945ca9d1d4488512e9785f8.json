{"remainingRequest":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/danijel/Documents/Workspace/KUM-web/frontend/src/components/eventsPage/Location.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/src/components/eventsPage/Location.vue","mtime":1557413197285},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1557082350867},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/babel-loader/lib/index.js","mtime":1557082335768},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1557082350867},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/vue-loader/lib/index.js","mtime":1557082351628}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\n\nexport default {\n    name: 'EventLocation',\n    props: ['eventLocation'],\n    data () {\n        return {\n            Lmap: {},\n            iconUrl: {},\n            layerGroup: {},\n            LmapOptions: {\n                center: [46.024948, 16.545330],\n                watch: true,\n                zoom: 16,\n                zoomControl: false,\n            },\n            locationExists: true\n        }\n    },\n    mounted() {\n        this.initMap()\n    },\n    methods: {\n        initMap(){\n            var LmapElement = document.getElementById('LmapId')\n\n            this.$nextTick(() => {\n\n                this.Lmap = L.map('LmapId', this.LmapOptions)\n\n\n                this.Lmap.dragging.disable()\n\n                // Mapbox - add your access token\n                L.mapbox.accessToken = 'pk.eyJ1IjoiZGFuaWplbG1yIiwiYSI6ImNqcG8xZG9jZDA5MXU0OHAxNDAyMjB4dWIifQ.K7aAZQ5yogCd_uAJpQ-hvg';\n                // Mapbox - add the style to your map as image tiles\n                L.mapbox.styleLayer('mapbox://styles/danijelmr/cjvgrggal09r51fk1o0omw4ce').addTo(this.Lmap);\n                \n                var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"120\" width=\"120\"><circle cx=\"60\" cy=\"60\" r=\"60\" fill=\"rgba(253,98,48,1)\" opacity=\"0.3\" /><circle cx=\"60\" cy=\"60\" r=\"40\" fill=\"red\" />Sorry, your browser does not support inline SVG.</svg>'\n                this.iconUrl = encodeURI(\"data:image/svg+xml,\" + svg).replace('#','%23')\n\n                var redIcon = L.icon({\n                    iconUrl: this.iconUrl,\n                    iconSize: [20, 20], // size of the icon\n                });\n\n                this.layerGroup = L.layerGroup().addTo(this.Lmap)\n\n                L.marker([46.024948, 16.545330], {icon: redIcon}).addTo(this.layerGroup);\n\n                //add zoom control with your options\n                L.control.zoom({\n                    position:'topright'\n                }).addTo(this.Lmap)\n\n                document.getElementsByClassName(\"leaflet-control-zoom\")[0].style.border = \"0px\"\n                document.getElementsByClassName(\"leaflet-control-zoom-in\")[0].style = \"background-color: rgba(255,255,255,0); font-size: 3em;\"\n                document.getElementsByClassName(\"leaflet-control-zoom-out\")[0].style = \"background-color: rgba(255,255,255,0); font-size: 3em;\"\n                \n            })\n        }\n    },\n    watch: { \n      \teventLocation: function() {\n\n            if(this.eventLocation != undefined && this.eventLocation.location != undefined){\n                \n                if(!this.locationExists){\n                    this.initMap()\n                    this.locationExists = true\n                } \n\n                var redIcon = L.icon({\n                    iconUrl: this.iconUrl,\n                    iconSize: [20, 20], // size of the icon\n                })\n\n                this.layerGroup.clearLayers();\n                L.marker([this.eventLocation.location.latitude, this.eventLocation.location.longitude], {icon: redIcon}).addTo(this.layerGroup)\n                this.Lmap.panTo(new L.LatLng(this.eventLocation.location.latitude, this.eventLocation.location.longitude))\n            } else {\n                this.locationExists = false\n            }    \n        }\n    }\n}\n",{"version":3,"sources":["Location.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Location.vue","sourceRoot":"src/components/eventsPage","sourcesContent":["<template>\n\t<div id=\"eventLocation\">\n        <div v-if=\"locationExists\">\n            <div id=\"LmapId\"></div>\n        </div>\n        <div v-else>DogaÄ‘aj nema lokaciju.</div>\n\t</div>\n</template>\n\n<script>\n/* eslint-disable */\n\nexport default {\n    name: 'EventLocation',\n    props: ['eventLocation'],\n    data () {\n        return {\n            Lmap: {},\n            iconUrl: {},\n            layerGroup: {},\n            LmapOptions: {\n                center: [46.024948, 16.545330],\n                watch: true,\n                zoom: 16,\n                zoomControl: false,\n            },\n            locationExists: true\n        }\n    },\n    mounted() {\n        this.initMap()\n    },\n    methods: {\n        initMap(){\n            var LmapElement = document.getElementById('LmapId')\n\n            this.$nextTick(() => {\n\n                this.Lmap = L.map('LmapId', this.LmapOptions)\n\n\n                this.Lmap.dragging.disable()\n\n                // Mapbox - add your access token\n                L.mapbox.accessToken = 'pk.eyJ1IjoiZGFuaWplbG1yIiwiYSI6ImNqcG8xZG9jZDA5MXU0OHAxNDAyMjB4dWIifQ.K7aAZQ5yogCd_uAJpQ-hvg';\n                // Mapbox - add the style to your map as image tiles\n                L.mapbox.styleLayer('mapbox://styles/danijelmr/cjvgrggal09r51fk1o0omw4ce').addTo(this.Lmap);\n                \n                var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"120\" width=\"120\"><circle cx=\"60\" cy=\"60\" r=\"60\" fill=\"rgba(253,98,48,1)\" opacity=\"0.3\" /><circle cx=\"60\" cy=\"60\" r=\"40\" fill=\"red\" />Sorry, your browser does not support inline SVG.</svg>'\n                this.iconUrl = encodeURI(\"data:image/svg+xml,\" + svg).replace('#','%23')\n\n                var redIcon = L.icon({\n                    iconUrl: this.iconUrl,\n                    iconSize: [20, 20], // size of the icon\n                });\n\n                this.layerGroup = L.layerGroup().addTo(this.Lmap)\n\n                L.marker([46.024948, 16.545330], {icon: redIcon}).addTo(this.layerGroup);\n\n                //add zoom control with your options\n                L.control.zoom({\n                    position:'topright'\n                }).addTo(this.Lmap)\n\n                document.getElementsByClassName(\"leaflet-control-zoom\")[0].style.border = \"0px\"\n                document.getElementsByClassName(\"leaflet-control-zoom-in\")[0].style = \"background-color: rgba(255,255,255,0); font-size: 3em;\"\n                document.getElementsByClassName(\"leaflet-control-zoom-out\")[0].style = \"background-color: rgba(255,255,255,0); font-size: 3em;\"\n                \n            })\n        }\n    },\n    watch: { \n      \teventLocation: function() {\n\n            if(this.eventLocation != undefined && this.eventLocation.location != undefined){\n                \n                if(!this.locationExists){\n                    this.initMap()\n                    this.locationExists = true\n                } \n\n                var redIcon = L.icon({\n                    iconUrl: this.iconUrl,\n                    iconSize: [20, 20], // size of the icon\n                })\n\n                this.layerGroup.clearLayers();\n                L.marker([this.eventLocation.location.latitude, this.eventLocation.location.longitude], {icon: redIcon}).addTo(this.layerGroup)\n                this.Lmap.panTo(new L.LatLng(this.eventLocation.location.latitude, this.eventLocation.location.longitude))\n            } else {\n                this.locationExists = false\n            }    \n        }\n    }\n}\n</script>\n\n<style scoped>\n#eventLocation{\n\twidth: 100%;\n}\n#LmapId{\n    width: 100%;\n    height: 200px;\n    position: absolute;\n}\n</style>"]}]}