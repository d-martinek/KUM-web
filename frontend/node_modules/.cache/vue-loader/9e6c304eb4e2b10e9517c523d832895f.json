{"remainingRequest":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/danijel/Documents/Workspace/KUM-web/frontend/src/components/signUp/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/src/components/signUp/Login.vue","mtime":1554936100863},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1549443809249},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/babel-loader/lib/index.js","mtime":1549443804466},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1549443809249},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/vue-loader/lib/index.js","mtime":1549443812532}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from \"axios\"\n\nexport default {\n  name: 'login',\n  props: ['lastRoute'],\n  data() {\n    return {\n\t\tlogin: {\n\t\t\temail: null,\n\t\t\tpassword: null,\n\t\t\terrors: [],\n\t\t\tstatus: null\n\t\t}\n    }\n  },\n  methods:{\n\n    validateEmail(email) {\n      return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    },\n\n    loginValidate() {\n      \n      this.login.errors = []\n\n      if(!this.login.email) {\n        this.login.errors.push(\"Email required.\")\n      } else if(!this.validateEmail(this.login.email)) {\n        this.login.errors.push(\"Email must be in format example@domain.com\")\n      }\n      if(!this.login.password) this.login.errors.push(\"Password required.\")\n\n      if(!(this.login.errors && this.login.errors.length)){\n        return true\n      } else{\n        return false\n      }\n      \n    },\n    loginHandler() {\n      let valid = this.loginValidate()\n\n      const loginUserData = {\n        email: this.login.email,\n        password: this.login.password,\n      }\n\n      if(valid) {\n        axios.post(\"/api/login\", loginUserData)\n        .then(res => {\n          if (res.data.success == true) {\n            this.$store.dispatch('authUser')\n\n            if(this.lastRoute){\n\t\t\t\tthis.$router.push({\n\t\t\t\t\tpath: this.lastRoute.path\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.$router.push({\n\t\t\t\t\tname: \"Home\"\n\t\t\t\t})\n\t\t\t}\n          } else {\n            this.login.status = res.data.message\n          }\n        })\n      }\n    }\n  }\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components/signUp","sourcesContent":["<template>\n\t<div class=\"login\">\n\t\t<div class=\"loginErrors\" style=\"padding: 2em 2em 0em 2em; color: #ff0055\">\n\t\t\t<h4 v-for=\"(err, i) in login.errors\" :key=\"i\">\n\t\t\t\t{{ err }}\n\t\t\t</h4>\n\t\t\t<h4>{{login.status}}</h4>\n\t\t</div>\n\n\t\t<v-form style=\"padding: 0em 2em 2em 2em;\">\n\t\t\t<v-flex xs12>\n\t\t\t\t<v-text-field\n\t\t\t\t\tv-model=\"login.email\"\n\t\t\t\t\tlabel=\"E-mail\"\n\t\t\t\t\trequired\n\t\t\t\t></v-text-field>\n\t\t\t</v-flex>\n\t\t\t<v-flex xs12>\n\t\t\t\t<v-text-field\n\t\t\t\t\tv-model=\"login.password\"\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\trequired\n\t\t\t\t></v-text-field>\n\t\t\t</v-flex>\n\t\t\t<v-btn @click=\"loginHandler\">\n\t\t\tLogin\n\t\t\t</v-btn>\n\t\t</v-form>\n\t</div>\n</template>\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n  name: 'login',\n  props: ['lastRoute'],\n  data() {\n    return {\n\t\tlogin: {\n\t\t\temail: null,\n\t\t\tpassword: null,\n\t\t\terrors: [],\n\t\t\tstatus: null\n\t\t}\n    }\n  },\n  methods:{\n\n    validateEmail(email) {\n      return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    },\n\n    loginValidate() {\n      \n      this.login.errors = []\n\n      if(!this.login.email) {\n        this.login.errors.push(\"Email required.\")\n      } else if(!this.validateEmail(this.login.email)) {\n        this.login.errors.push(\"Email must be in format example@domain.com\")\n      }\n      if(!this.login.password) this.login.errors.push(\"Password required.\")\n\n      if(!(this.login.errors && this.login.errors.length)){\n        return true\n      } else{\n        return false\n      }\n      \n    },\n    loginHandler() {\n      let valid = this.loginValidate()\n\n      const loginUserData = {\n        email: this.login.email,\n        password: this.login.password,\n      }\n\n      if(valid) {\n        axios.post(\"/api/login\", loginUserData)\n        .then(res => {\n          if (res.data.success == true) {\n            this.$store.dispatch('authUser')\n\n            if(this.lastRoute){\n\t\t\t\tthis.$router.push({\n\t\t\t\t\tpath: this.lastRoute.path\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.$router.push({\n\t\t\t\t\tname: \"Home\"\n\t\t\t\t})\n\t\t\t}\n          } else {\n            this.login.status = res.data.message\n          }\n        })\n      }\n    }\n  }\n}\n</script>\n"]}]}