{"remainingRequest":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/danijel/Documents/Workspace/KUM-web/frontend/src/components/signUp/Register.vue?vue&type=template&id=255efada&","dependencies":[{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/src/components/signUp/Register.vue","mtime":1554496919165},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1549443809249},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1549443812532},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1549443809249},{"path":"/home/danijel/Documents/Workspace/KUM-web/frontend/node_modules/vue-loader/lib/index.js","mtime":1549443812532}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"login-register\" }, [\n    _c(\n      \"div\",\n      { staticClass: \"registerErrors\" },\n      [\n        _vm._l(_vm.register.errors, function(err, i) {\n          return _c(\"div\", { key: i }, [\n            _vm._v(\"\\n      \" + _vm._s(err) + \"\\n    \")\n          ])\n        }),\n        _vm._v(\"\\n    \" + _vm._s(_vm.register.status) + \"\\n  \")\n      ],\n      2\n    ),\n    _c(\"hr\"),\n    _c(\"div\", { staticClass: \"register\" }, [\n      _c(\"span\", [_vm._v(\"Register: \")]),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.register.email,\n            expression: \"register.email\"\n          }\n        ],\n        attrs: { type: \"text\", placeholder: \"Email\" },\n        domProps: { value: _vm.register.email },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.$set(_vm.register, \"email\", $event.target.value)\n          }\n        }\n      }),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.register.password,\n            expression: \"register.password\"\n          }\n        ],\n        attrs: { type: \"password\", placeholder: \"Password\" },\n        domProps: { value: _vm.register.password },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.$set(_vm.register, \"password\", $event.target.value)\n          }\n        }\n      }),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.register.confirmPassword,\n            expression: \"register.confirmPassword\"\n          }\n        ],\n        attrs: { type: \"password\", placeholder: \"Confirm password\" },\n        domProps: { value: _vm.register.confirmPassword },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.$set(_vm.register, \"confirmPassword\", $event.target.value)\n          }\n        }\n      }),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.register.firstName,\n            expression: \"register.firstName\"\n          }\n        ],\n        attrs: { type: \"text\", placeholder: \"First name\" },\n        domProps: { value: _vm.register.firstName },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.$set(_vm.register, \"firstName\", $event.target.value)\n          }\n        }\n      }),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.register.lastName,\n            expression: \"register.lastName\"\n          }\n        ],\n        attrs: { type: \"text\", placeholder: \"Last name\" },\n        domProps: { value: _vm.register.lastName },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.$set(_vm.register, \"lastName\", $event.target.value)\n          }\n        }\n      }),\n      _c(\"button\", { on: { click: _vm.registerHandler } }, [_vm._v(\"Submit\")])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}